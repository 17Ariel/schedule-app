
import com.mysql.jdbc.PreparedStatement;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 import javafx.scene.paint.Color;
 import javax.swing.table.DefaultTableModel;

 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Username
 */
public class view extends javax.swing.JFrame {

    private static Connection conn;
    PreparedStatement pt;

    /**
     * Creates new form view
     */

    public view() {
        initComponents();
        connect();
        loadtb();
        enable(false);
    }

    public void connect() {
        String url, user, pass;
        url = "jdbc:mysql://localhost:3306/schedule?serverTimezone=UTC";
        user = "root";
        pass = "";
        try {
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            conn = (Connection) DriverManager.getConnection(url, user, pass);
            //JOptionPane.showMessageDialog(this,"Connected");
        } catch (SQLException ex) {
            Logger.getLogger(sched.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
//load the table
    public void loadtb() {
        try {
            pt = (PreparedStatement) conn.prepareStatement("Select * from scheduling");
            ResultSet rs = pt.executeQuery();
            DefaultTableModel tmodel = (DefaultTableModel) tabled.getModel();
            tmodel.setRowCount(0);

            while (rs.next()) {

                int id = rs.getInt("id");
                String t = rs.getString("title");
                String p = rs.getString("place");
                String s = rs.getString("starttime");
                String e = rs.getString("endtime");
                tmodel.addRow(new Object[]{id, t, p, s, e});

            }
        } catch (SQLException ex) {
            Logger.getLogger(view.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    public void enable(boolean a)
    {
        tb_title.setEnabled(a);
        tb_place.setEnabled(a);
        tb_start.setEnabled(a);
        tb_end.setEnabled(a);
    }
    
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabled = new javax.swing.JTable();
        tb_edit = new javax.swing.JButton();
        tb_del = new javax.swing.JButton();
        tb_title = new javax.swing.JTextField();
        tb_place = new javax.swing.JTextField();
        tb_start = new javax.swing.JTextField();
        tb_end = new javax.swing.JTextField();
        lb_id = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        btn_download = new javax.swing.JMenu();
        btn_back = new javax.swing.JMenuItem();
        tb_load = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(246, 246, 246));

        tabled.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tabled.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tabled.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Title", "Place", "Start Time", "End Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabled.setGridColor(java.awt.Color.white);
        tabled.setSelectionBackground(new java.awt.Color(72, 52, 223));
        tabled.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabledMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabled);
        if (tabled.getColumnModel().getColumnCount() > 0) {
            tabled.getColumnModel().getColumn(0).setResizable(false);
            tabled.getColumnModel().getColumn(1).setResizable(false);
            tabled.getColumnModel().getColumn(2).setResizable(false);
            tabled.getColumnModel().getColumn(3).setResizable(false);
            tabled.getColumnModel().getColumn(4).setResizable(false);
        }

        tb_edit.setBackground(new java.awt.Color(72, 52, 223));
        tb_edit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tb_edit.setForeground(java.awt.Color.white);
        tb_edit.setText("Edit");
        tb_edit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tb_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_editActionPerformed(evt);
            }
        });

        tb_del.setBackground(java.awt.Color.red);
        tb_del.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tb_del.setForeground(java.awt.Color.white);
        tb_del.setText("Delete");
        tb_del.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tb_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_delActionPerformed(evt);
            }
        });

        tb_title.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tb_title.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tb_title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_titleActionPerformed(evt);
            }
        });

        tb_place.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tb_place.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        tb_start.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tb_start.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tb_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_startActionPerformed(evt);
            }
        });

        tb_end.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tb_end.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        lb_id.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lb_id.setText("id");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tb_del, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                            .addComponent(tb_edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tb_place, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tb_title, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tb_start, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tb_end, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_id))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(lb_id)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tb_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tb_place, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tb_start, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tb_end, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(tb_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tb_del, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jMenuBar1.setForeground(java.awt.Color.white);
        jMenuBar1.setBorderPainted(false);

        btn_download.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_download.setText("Menu");
        btn_download.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btn_back.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        btn_download.add(btn_back);

        tb_load.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        tb_load.setText("Download");
        tb_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_loadActionPerformed(evt);
            }
        });
        btn_download.add(tb_load);

        jMenuBar1.add(btn_download);

        jMenu2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jMenu2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//update button
    private void tb_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_editActionPerformed
        // TODO add your handling code here:
        tb_del.setEnabled(false);
        if (((tb_end.getText().trim().isEmpty() || tb_title.getText().trim().isEmpty()) || tb_place.getText().trim().isEmpty()) || tb_start.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No Record has been Updated!");
            tb_del.setEnabled(true);
        } 
        else if(tb_start.getText().equals( tb_end.getText()))
            {
                 JOptionPane.showMessageDialog(this,"Invalid time");
                 tb_del.setEnabled(true);
            }
        else if(tb_start.getText().length()!= 8||tb_end.getText().length()!= 8)
             {
                 JOptionPane.showMessageDialog(this,"Invalid time format");
                 tb_del.setEnabled(true);
             }
        else if(tb_start.getText().compareTo(tb_end.getText())>0)
            {
                 JOptionPane.showMessageDialog(this,"too early");
                 tb_del.setEnabled(true);
            }
        else {
            
                int row = tabled.getSelectedRow();
                String sel = tabled.getModel().getValueAt(row, 0).toString();
                String sql = "Update scheduling set title=?, place=?, starttime=?, endtime=? where id=" + sel;
                try {
                    //Connection conn =(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/sched?serverTimezone=UTC","root","");
                    pt = (PreparedStatement) conn.prepareStatement(sql);
                    pt.setString(1, tb_title.getText());
                    pt.setString(2, tb_place.getText());
                    pt.setString(3, tb_start.getText());
                    pt.setString(4, tb_end.getText());
                    int up = pt.executeUpdate();
                    if (up > 0) {
                        JOptionPane.showMessageDialog(this, "Successfully Save");
                    }
                    tb_del.setEnabled(true);
                    lb_id.setText("id");
                    tb_title.setText("");
                    tb_place.setText("");
                    tb_start.setText("");
                    tb_end.setText("");

                } catch (SQLException ex) {
                    Logger.getLogger(view.class.getName()).log(Level.SEVERE, null, ex);
                }
                loadtb();    
                tb_del.setEnabled(true);
                enable(false);
            }
            
       
        

    }//GEN-LAST:event_tb_editActionPerformed
//delete button
    private void tb_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_delActionPerformed
        // TODO add your handling code here:
        if (((tb_end.getText().trim().isEmpty() || tb_title.getText().trim().isEmpty()) || tb_place.getText().trim().isEmpty()) || tb_start.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No record has been deleted!");
        } else {
            int ask = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (ask == JOptionPane.YES_OPTION) {
                int row = tabled.getSelectedRow();
                DefaultTableModel model = (DefaultTableModel) tabled.getModel();
                String sel = model.getValueAt(row, 0).toString();
                if (row >= 0) {
                    model.removeRow(row);
                    try {
                        Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/schedule?serverTimezone=UTC", "root", "");
                        PreparedStatement pt = (PreparedStatement) conn.prepareStatement("delete from scheduling where id='" + sel + "' ");
                        pt.executeUpdate();
                        JOptionPane.showMessageDialog(this, "Successfully Deleted");
                        lb_id.setText("id");
                        tb_title.setText("");
                        tb_place.setText("");
                        tb_start.setText("");
                        tb_end.setText("");
                        enable(false);
                    } catch (Exception e) {
                        System.out.println(e);
                    }
                }
            }
            else {
                JOptionPane.showMessageDialog(this, "Nothing has Deleted");
            }

        }
    }//GEN-LAST:event_tb_delActionPerformed

    private void tb_titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_titleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tb_titleActionPerformed

    private void tabledMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabledMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel) tabled.getModel();
        int i = tabled.getSelectedRow();
        lb_id.setText(tmodel.getValueAt(i, 0).toString());
        tb_title.setText(tmodel.getValueAt(i, 1).toString());
        tb_place.setText(tmodel.getValueAt(i, 2).toString());
        tb_start.setText(tmodel.getValueAt(i, 3).toString());
        tb_end.setText(tmodel.getValueAt(i, 4).toString());
        enable(true);
        


    }//GEN-LAST:event_tabledMouseClicked

    private void tb_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tb_startActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        sched s = new sched();
        s.setVisible(true);
    }//GEN-LAST:event_btn_backActionPerformed

    private void tb_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_loadActionPerformed
        // TODO add your handling code here:
        JFileChooser file= new JFileChooser();
        file.setDialogTitle("Name of file");
        int sel=file.showSaveDialog(this);
        if(sel==JFileChooser.APPROVE_OPTION)
        {
            File files=file.getSelectedFile();
            try{
                FileWriter fw=new FileWriter(files);
                BufferedWriter bw= new BufferedWriter(fw);
                 for(int i=0; i<tabled.getRowCount();i++)
                {
                    for(int j=0; j<tabled.getColumnCount();j++)
                    {
                      bw.write(tabled.getModel().getValueAt(i, j)+" ");
                    }
                   bw.write("\n______________________________________________\n");
                }
                bw.close();
                fw.close();
                JOptionPane.showMessageDialog(this, "Exported");
            }
            catch(IOException ex)
            {
                JOptionPane.showMessageDialog(this, "ERROR");
            }
        }
       
        
    }//GEN-LAST:event_tb_loadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new view().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btn_back;
    private javax.swing.JMenu btn_download;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_id;
    private javax.swing.JTable tabled;
    private javax.swing.JButton tb_del;
    private javax.swing.JButton tb_edit;
    private javax.swing.JTextField tb_end;
    private javax.swing.JMenuItem tb_load;
    private javax.swing.JTextField tb_place;
    private javax.swing.JTextField tb_start;
    private javax.swing.JTextField tb_title;
    // End of variables declaration//GEN-END:variables
}
